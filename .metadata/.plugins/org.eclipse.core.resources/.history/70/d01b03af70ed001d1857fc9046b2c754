package day14.api.ramda.stream;

import java.util.*;
import java.util.stream.Collectors;
public class MainClass03 {
	
	public static void main(String[] args) {
		
		List<Integer> list = new ArrayList<>();
		Random ran = new Random();

		for(int i = 0; i < 100; i++) {
			
			list.add( ran.nextInt(100) +1 ); //1~100까지
			
		}
		
		System.out.println(list.toString());
		
		//최종집계 함수
		//collect()
		List<Integer> newList =  list.stream().filter( a -> a% 3 == 0 ).collect( Collectors.toList());
		System.out.println(newList.toString());
		
		Set<Integer> newList2 = list.stream().filter(a -> a% 3 == 0).collect( Collectors.toSet() );
		System.out.println(newList2.toString());
		
		System.out.println("----------------------------------------------");
		//sum(), count(), avg(), max(), min() - 숫자를 다루는 스트림에서만 사용

		int r1 = list.stream().distinct().mapToInt( a -> a).sum();
		System.out.println("합계:" + r1);
		
		long r2 = list.stream().distinct().mapToInt(a -> a).count();
		System.out.println("개수:" + r2);
		
		OptionalDouble r3 = list.stream().distinct().mapToInt(a -> a).average();
		System.out.println("평균:" + r3);
		
		
		
	}

}
